{"version":3,"sources":["redux/types.js","redux/likesReducer.js","redux/inputReducer.js","redux/commentsReducer.js","redux/appReducer.js","redux/rootReducer.js","redux/actions.js","redux/middleware.js","Likes.js","Title.js","SingleComment.js","Comments.js","Spin.js","App.js","index.js"],"names":["INCREMENT","DECREMENT","INPUT_TEXT","COMMENT_CREATE","COMMENT_UPDATE","COMMENT_DELETE","COMMENTS_LOAD","LOADER_DISPLAY_ON","LOADER_DISPLAY_OFF","ERROR_DISPLAY_ON","ERROR_DISPLAY_OFF","initialState","likes","text","comments","loading","rootReducer","combineReducers","likesReducer","state","action","type","inputReducer","commentsReducer","data","commentsNew","map","res","name","id","itemIndex","findIndex","nextComments","slice","filter","appReducer","error","loaderOff","errorOn","dispatch","setTimeout","badWords","connect","onIncrementLikes","onDecrementLikes","props","className","onClick","Title","useSelector","useDispatch","onChange","e","inputText","target","value","SingleComment","useState","commentText","setCommentText","useEffect","onSubmit","preventDefault","commentUpdate","commentDelete","hidden","Comments","a","fetch","response","json","jsonData","textComment","setTextComment","console","log","uniqid","commentCreate","length","Spin","spinner","color","height","width","visible","App","src","alt","store","createStore","compose","applyMiddleware","thunk","next","some","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb7fbf38.chunk.js","sourcesContent":["export const INCREMENT = 'INCREMENT'\nexport const DECREMENT = 'DECREMENT'\nexport const INPUT_TEXT = 'INPUT_TEXT'\nexport const COMMENT_CREATE = 'COMMENT_CREATE'\nexport const COMMENT_UPDATE = 'COMMENT_UPDATE'\nexport const COMMENT_DELETE = 'COMMENT_DELETE'\n\nexport const COMMENTS_LOAD = 'COMMENTS_LOAD'\nexport const LOADER_DISPLAY_ON = 'LOADER_DISPLAY_ON'\nexport const LOADER_DISPLAY_OFF = 'LOADER_DISPLAY_OFF'\nexport const ERROR_DISPLAY_ON = 'ERROR_DISPLAY_ON'\nexport const ERROR_DISPLAY_OFF = 'ERROR_DISPLAY_OFF'\n\n","import { INCREMENT, DECREMENT } from \"./types\";\n\nconst initialState = {\n  likes: 10\n}\n\nexport const likesReducer = (state = initialState, action) => {\n\n  switch(action.type) {\n    case INCREMENT:\n      return {\n        ...state,\n        likes: state.likes + 1\n      }\n\n    case DECREMENT:\n      return {\n        ...state,\n        likes: state.likes - 1\n      }\n\n    default:\n      return state\n  }\n}\n","import { INPUT_TEXT } from \"./types\";\n\nconst initialState = {\n  text: ''\n}\n\nexport const inputReducer = (state = initialState, action) => {\n\n  switch(action.type) {\n    case INPUT_TEXT:\n      return {\n        ...state,\n        text: action.text\n      }\n\n    default:\n      return state\n  }\n}\n","import {\n  COMMENT_CREATE,\n  COMMENTS_LOAD,\n  COMMENT_UPDATE,\n  COMMENT_DELETE\n} from \"./types\";\n\nconst initialState = {\n  comments: []\n}\n\nexport const commentsReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case COMMENT_CREATE:\n      return {\n        ...state,\n        comments: [...state.comments, action.data]\n      }\n\n    case COMMENTS_LOAD:\n      const commentsNew = action.data.map(res => {\n        return {\n          text: res.name,\n          id: res.id\n        }\n      })\n      return {\n        ...state,\n        comments: commentsNew\n      }\n\n    case COMMENT_UPDATE:\n      const { data } = action\n      const { comments } = state\n      const itemIndex = comments.findIndex(res => res.id === data.id)\n\n      const nextComments = [\n        ...comments.slice(0, itemIndex),\n        data,\n        ...comments.slice(itemIndex + 1)\n      ]\n\n      return {\n        ...state,\n        comments: nextComments\n      }\n    \n    case COMMENT_DELETE:\n      return {\n        ...state,\n        comments: [...state.comments.filter(res => res.id !== action.id)]\n      }\n\n    default:\n      return state\n  }\n}\n","import {\n  LOADER_DISPLAY_ON,\n  LOADER_DISPLAY_OFF,\n  ERROR_DISPLAY_ON,\n  ERROR_DISPLAY_OFF\n} from \"./types\";\n\nconst initialState = {\n  loading: false\n}\n\nexport const appReducer = (state = initialState, action) => {\n\n  switch(action.type) {\n    case LOADER_DISPLAY_ON:\n      return {\n        ...state,\n        loading: true\n      }\n\n    case LOADER_DISPLAY_OFF:\n      return {\n        ...state,\n        loading: false\n      }\n\n    case ERROR_DISPLAY_ON:\n      return {\n        ...state,\n        error: action.text\n      }\n\n    case ERROR_DISPLAY_OFF:\n      return {\n        ...state,\n        error: null\n      }\n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { likesReducer } from './likesReducer'\nimport { inputReducer } from './inputReducer'\nimport { commentsReducer } from './commentsReducer'\nimport { appReducer } from './appReducer'\n\nexport const rootReducer = combineReducers({\n  likesReducer: likesReducer,\n  inputReducer: inputReducer,\n  commentsReducer: commentsReducer,\n  appReducer: appReducer\n})\n","import {\n  INCREMENT,\n  DECREMENT,\n  INPUT_TEXT,\n  COMMENT_CREATE,\n  COMMENT_UPDATE,\n  COMMENT_DELETE,\n  COMMENTS_LOAD,\n  LOADER_DISPLAY_ON,\n  LOADER_DISPLAY_OFF,\n  ERROR_DISPLAY_ON,\n  ERROR_DISPLAY_OFF\n} from './types'\n\nexport function incrementLikes() {\n  return {\n    type: INCREMENT\n  }\n}\n\nexport function decrementLikes() {\n  return {\n    type: DECREMENT\n  }\n}\n\nexport function inputText(text) {\n  return {\n    type: INPUT_TEXT,\n    text\n  }\n}\n\nexport function commentCreate(text, id) {\n  return {\n    type: COMMENT_CREATE,\n    data: {text, id}\n  }\n}\n\nexport function commentUpdate(text, id) {\n  return {\n    type: COMMENT_UPDATE,\n    data: {text, id}\n  }\n}\n\nexport function commentDelete(id) {\n  return {\n    type: COMMENT_DELETE,\n    id\n  }\n}\n\nexport function loaderOn() {\n  return {\n    type: LOADER_DISPLAY_ON,\n  }\n}\n\nexport function loaderOff() {\n  return {\n    type: LOADER_DISPLAY_OFF,\n  }\n}\n\nexport function errorOn(text) {\n  return dispatch => {\n    dispatch({\n      type: ERROR_DISPLAY_ON,\n      text\n    })\n\n    setTimeout(() => {\n      dispatch(errorOff())\n    }, 2000)\n  }\n  \n}\n\nexport function errorOff() {\n  return {\n    type: ERROR_DISPLAY_OFF,\n  }\n}\n\nexport function commentsLoad() {\n  return async dispatch => {\n    try {\n      dispatch(loaderOn())\n\n      const response = await fetch(\n        'https://jsonplaceholder.typicode.com/comments?_limit=5'\n      )\n      const jsonData = await response.json()\n      \n      setTimeout(() => {\n        dispatch({\n          type: COMMENTS_LOAD,\n          data: jsonData\n        })\n\n        dispatch(loaderOff())\n      }, 1000)\n    } catch (err) {\n      dispatch(errorOn('ERROR!!!'))\n      dispatch(loaderOff())\n    }\n    \n  } \n}\n","import { COMMENT_CREATE } from \"./types\";\nimport { errorOn } from './actions'\n\nconst badWords = ['козел', 'осел']\n\nexport function spamFilter({ dispatch }) {\n  \n  return function(next) {\n\n    return function(action) {\n      if(action.type === COMMENT_CREATE) {\n        const hasBadWords = badWords.some(\n          res => action.data.text.includes(res)\n        )\n        if(hasBadWords) {\n          return dispatch(errorOn('Уважайте людей!'))\n        }\n      }\n\n      return next(action)\n    }\n  }\n}\n","import { connect } from 'react-redux'\nimport { incrementLikes, decrementLikes } from './redux/actions'\n\nfunction Likes(props) {\n\n  return (\n    <div className=\"button-controls\">\n      <button\n        onClick={props.onIncrementLikes}\n      >\n        ♥ {props.likes}\n      </button>\n      <button\n        onClick={props.onDecrementLikes}\n      >\n        Dislike\n      </button>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const { likesReducer } = state\n\n  return {\n    likes: likesReducer.likes\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  \n  return {\n    onIncrementLikes: () => {\n      return dispatch(incrementLikes())\n    },\n    onDecrementLikes: () => {\n      return dispatch(decrementLikes())\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Likes)\n","import { useDispatch, useSelector } from 'react-redux'\nimport { inputText } from './redux/actions'\n\nfunction Title(props) {\n  const text = useSelector(state => {\n    const { inputReducer } = state\n\n    return inputReducer.text\n  })\n  \n  const dispatch = useDispatch()\n\n  const handleChange = (e) => {\n    dispatch(inputText(e.target.value))\n  }\n\n  return (\n    <div className=\"card-title\">\n      <div className=\"card-title-top\">\n        <input\n          type=\"text\"\n          onChange={handleChange}\n        />\n      </div>\n      <p>{text}</p>\n    </div>\n  )\n}\n\nexport default Title\n","import { useState, useEffect } from 'react'\nimport { commentUpdate, commentDelete } from './redux/actions'\nimport { useDispatch } from 'react-redux'\n\n\nfunction SingleComment({ data }) {\n  const { text, id } = data\n  const [commentText, setCommentText] = useState('')\n  const dispatch = useDispatch()\n\n  const handleUpdate = (e) => {\n    e.preventDefault()\n    dispatch(commentUpdate(commentText, id))\n  }\n\n  const handleDelete = () => {\n    dispatch(commentDelete(id))\n  }\n\n  useEffect(() => {\n    if(text) {\n      setCommentText(text)\n    }\n  }, [text])\n\n  const handleInput = (e) => {\n    setCommentText(e.target.value)\n  }\n\n  return (\n    <form\n      className=\"comments-item\"\n      onSubmit={handleUpdate}\n    >\n      <div\n        className=\"comments-item-delete\"\n        onClick={handleDelete}\n      >\n        &times;\n      </div>\n      <input\n        type=\"text\"\n        value={commentText}\n        onChange={handleInput}\n      />\n      <input type=\"submit\" hidden />\n    </form>\n  )\n}\n\nexport default SingleComment\n","import SingleComment from './SingleComment'\nimport { useState, useEffect } from 'react'\nimport { commentCreate, commentsLoad } from './redux/actions'\nimport uniqid from 'uniqid'\nimport { useDispatch, useSelector } from 'react-redux'\n\nfunction Comments(props) {\n  useEffect(() => {\n    dispatch(commentsLoad())\n  }, [])\n\n  const [textComment, setTextComment] = useState('')\n  \n  const comments = useSelector(state => {\n    const { commentsReducer } = state\n    \n    return commentsReducer.comments\n  })\n\n  const handleInput = (e) => {\n    setTextComment(e.target.value)\n  }\n\n  console.log(comments)\n\n  const dispatch = useDispatch()\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const id = uniqid()\n    dispatch(commentCreate(textComment, id))\n  }\n\n  return (\n    <div className=\"card-comments\">\n      <form \n        className=\"comments-item-create\"\n        onSubmit={handleSubmit}\n      >\n        <input\n          type=\"text\"\n          value={textComment}\n          onChange={handleInput}\n        />\n        <input type=\"submit\" hidden />\n      </form>\n      {!!comments.length && comments.map(res => {\n        return (\n          <SingleComment \n            key={res.id}\n            data={res}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Comments\n","import Loader from 'react-loader-spinner'\nimport { useSelector } from 'react-redux'\n\nconst Spin = (props) => {\n  const spinner = useSelector(\n    state => state.appReducer.loading\n  )\n\n  return (\n    <div className='loader-styles'>\n      <Loader\n        type=\"TailSpin\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        visible={spinner}\n      />\n    </div>\n  )\n}\n\nexport default Spin\n","import './App.css';\nimport { useSelector } from 'react-redux'\nimport Likes from './Likes'\nimport Title from './Title'\nimport Comments from './Comments'\nimport Spin from './Spin'\n\nfunction App() {\n  const error = useSelector(\n    state => state.appReducer.error\n  )\n\n  console.log(error)\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrap\">\n        <Spin />\n        <div className=\"card\">\n          {error && (\n            <div className='error-message'>\n              {error}\n            </div>\n          )}\n          <div className=\"card-image\">\n            <img src=\"./sea.jpg\" alt=\"surfing\"/>\n            <Title />\n            <Likes />\n          </div>\n          <Comments />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk'\nimport { createStore, compose, applyMiddleware } from 'redux'\nimport { rootReducer } from './redux/rootReducer'\nimport { Provider } from 'react-redux'\nimport { spamFilter } from './redux/middleware'\nimport './index.css';\nimport App from './App';\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(\n    thunk,\n    spamFilter\n  )\n))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}